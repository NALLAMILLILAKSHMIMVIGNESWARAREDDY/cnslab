from sklearn.cluster import KMeans
from sklearn.mixture import GaussianMixture
import sklearn.metrics as metrics
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
iris=load_iris()
X=iris.data # Features
y=iris.target # Target
plt.figure(figsize=(14,7))
colormap = np.array(['red', 'lime', 'black'])
plt.subplot(1,3,1)
plt.title('Real')
plt.scatter(X[:, 2], X[:, 3], c=colormap[y])
model = KMeans(n_clusters=3, random_state=0).fit(X)
plt.subplot(1,3,2)
plt.title('KMeans')
plt.scatter (X[:, 2], X[:, 3], c=colormap[model.labels_]) 
print('The accuracy score of K-Means:', metrics.accuracy_score(y, model.labels_))
print('The Confusion matrix of K-Means:\n', metrics.confusion_matrix(y, model.labels_))
gmm = GaussianMixture(n_components=3, random_state=0).fit(X)
y_cluster_gmm = gmm.predict(X)
plt.subplot(1,3,3)
plt.title('GMM Classification')
plt.scatter(X[:, 2], X[:, 3], c=colormap[y_cluster_gmm])
print('The accuracy score of GMM:', metrics.accuracy_score(y, y_cluster_gmm))
print('The Confusion matrix of GMM:\n', metrics.confusion_matrix(y, y_cluster_gmm))
plt.show()
